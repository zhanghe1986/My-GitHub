package com.hikvision.cms.cache.manager;

import com.hikvision.cms.cache.core.common.CacheConstants.DATA_TYPE;

/**
 * 使用缓存的接口
 * @version V1.0
 */
public interface IDataStore {
	
	final static int XML_MAX_LENGTH = 1000000;
	final static int BLOCK_LENGTH = 1000;
	final static String BIG_DATA_FLAG = "DATA_BLOCK_COUNT_";
	
	/**
	 * 将数据存放入缓存中，默认数据类型为DATA_TYPE.TEMP 永不过期
	 * @param key   键
	 * @param value 值
	 * @return
	 * @throws DataLoadException
	 */
	public boolean set(String key,String value) throws DataLoadException;
	
	/**
	 * 将数据存放入缓存中 永不过期
	 * @param key   键
	 * @param value 值
	 * @param type  存入数据的类型
	 * @return
	 * @throws DataLoadException
	 */
	public boolean set(String key,String value,DATA_TYPE type) throws DataLoadException;
	
	/**
	 * 将数据存放入缓存中 ,并指定过期时间
	 * @param key    键
	 * @param value  值
	 * @param exp    过期时间(单位毫秒)
	 * @return
	 * @throws DataLoadException
	 */
	public boolean set(String key,String value,long exp) throws DataLoadException;
	
	/**
	 * 将数据存放入缓存中 ,并指定过期时间和数据类型
	  * @param key    键
	 * @param value  值
	 * @param exp    过期时间(单位毫秒)
	 * @param type   数据类型
	 * @return
	 * @throws DataLoadException
	 */
	public boolean set(String key,String value,long exp,DATA_TYPE type) throws DataLoadException;
	
	/**
	 * 获取指定键的数据，数据类型默认为DATA_TYPE.TEMP
	 * @param key  键
	 * @return
	 * @throws DataLoadException
	 */
	public String get(String key) throws DataLoadException;
	
	/**
	 * 获取指定键和数据类型的数据
	 * @param key    键
	 * @param type   数据类型
	 * @return
	 * @throws DataLoadException
	 */
	public String get(String key,DATA_TYPE type) throws DataLoadException;
	
	
	/**
	 * 删除指定键的数据，数据类型默认为DATA_TYPE.TEMP
	 * @param key  键
	 * @return
	 * @throws DataLoadException
	 */
	public boolean remove(String key) throws DataLoadException;
	
	/**
	 * 删除指定键和数据类型的数据
	 * @param key   键
	 * @param type  值
	 * @return
	 * @throws DataLoadException
	 */
	public boolean remove(String key,DATA_TYPE type) throws DataLoadException;
	
	/**
	 * 将对象数据存放入缓存中，默认数据类型为DATA_TYPE.TEMP 永不过期<br>
	 * 对象序列化后的长度不能超过 1000000 Byte
	 * @param key     键
	 * @param value   值
	 * @return
	 * @throws DataLoadException
	 */
	public boolean setObject(String key,Object value) throws DataLoadException;
	
	/**
	 * 将对象数据存放入缓存中并指定过期时间，默认数据类型为DATA_TYPE.TEMP <br>
	 * 对象序列化后的长度不能超过 1000000 Byte
	 * @param key    键
	 * @param value  值
	 * @param exp    过期时间
	 * @return
	 * @throws DataLoadException
	 */
	public boolean setObject(String key,Object value,long exp) throws DataLoadException;
	
	/**
	 * 将对象数据存放入缓存中并指定数据类型，数据永不过期 <br>
	 * 对象序列化后的长度不能超过 1000000 Byte
	 * @param key    键
	 * @param value  值
	 * @param type    数据类型
	 * @return
	 * @throws DataLoadException
	 */
	public boolean setObject(String key,Object value,DATA_TYPE type) throws DataLoadException;
	
	/**
	 * 将对象数据存放入缓存中并指定过期时间和数据类型 <br>
	 * 对象序列化后的长度不能超过 1000000 Byte
	 * @param key     键
	 * @param value   值
	 * @param exp     过期时间
	 * @param type    数据类型
	 * @return
	 * @throws DataLoadException
	 */
	public boolean setObject(String key,Object value,long exp, DATA_TYPE type) throws DataLoadException;
	
	/**
	 * 获取指定键和数据类型的对象， 返回的是保存的对象类型，使用的时候需要进行强制转换
	 * @param key   键
	 * @return
	 * @throws DataLoadException
	 */
	@Deprecated
	public Object getObject(String key) throws DataLoadException;
	
	/**
	 * 获取指定键和数据类型的对象， 返回的是保存的对象类型，使用的时候需要进行强制转换
	 * @param key    键
	 * @param type   数据类型
	 * @return
	 * @throws DataLoadException
	 */
	@Deprecated
	public Object getObject(String key,DATA_TYPE type) throws DataLoadException;
}